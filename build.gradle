buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:4.2.8"
        classpath "net.serenity-bdd:serenity-single-page-report:4.2.8"
    }
}

plugins {
    id 'java'
    id 'idea'
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.2.8"
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

group 'com.nit'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

ext {
    serenityVersion = '4.0.43'
    seleniumVersion = '4.17.0'
    cucumberVersion = '7.14.0'
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'io.appium:java-client:9.2.2'
    implementation 'com.thoughtworks.xstream:xstream:1.4.21'
    implementation "net.serenity-bdd:serenity-rest-assured:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-ensure:${serenityVersion}"
    implementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    implementation "org.seleniumhq.selenium:selenium-api:${seleniumVersion}"
    implementation "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    implementation "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    implementation "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.assertj:assertj-core:3.25.1'
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation 'org.slf4j:slf4j-log4j12:2.0.11'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.3'
    implementation files('libs/jconn4.jar')
    implementation 'org.seleniumhq.selenium:selenium-java:latest.release'
    implementation "io.cucumber:cucumber-java:${cucumberVersion}"
    implementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    implementation "io.cucumber:cucumber-core:${cucumberVersion}"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    systemProperty "file.encoding", "UTF-8"
    maxParallelForks = 1
}

test {
    def hasPropertyValue = project.hasProperty('runner')

    if (hasPropertyValue) {
        systemProperty "runner", findProperty("runner")
        def runner = "${runner}".split(",")

        for (run in runner) {
            include "**/" + run + ".class"
        }

    } else {
        println 'Run all test'
    }
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)
